import * as vscode from 'vscode';
export { activate as activateAutoInsertion } from './lib/features/autoInsertion';
export { activate as activateDocumentDropEdit } from './lib/features/documentDropEdits';
export { activate as activateWriteVirtualFiles } from './lib/features/writeVirtualFiles';
export { activate as activateFindFileReferences } from './lib/features/fileReferences';
export { activate as activateReloadProjects } from './lib/features/reloadProject';
export { activate as activateTsConfigStatusItem } from './lib/features/tsconfig';
export { activate as activateTsVersionStatusItem, getTsdk } from './lib/features/tsVersion';
export * from 'vscode-languageclient';
import type { BaseLanguageClient, Middleware } from 'vscode-languageclient';
export declare const middleware: Middleware;
export declare function parseServerCommand(command: vscode.Command): vscode.Command;
export declare const currentLabsVersion = "2.3.1";
export declare function createLabsInfo(languageServerProtocol: typeof import('@volar/language-server/protocol')): {
    extensionExports: LabsInfo;
    addLanguageClient(languageClient: BaseLanguageClient): void;
};
export interface LabsInfo {
    volarLabs: {
        version: typeof currentLabsVersion;
        languageClients: BaseLanguageClient[];
        onDidAddLanguageClient: vscode.Event<BaseLanguageClient>;
        languageServerProtocol: typeof import('@volar/language-server/protocol');
    };
}
